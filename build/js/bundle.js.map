{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/app.js"],"names":[],"mappings":"AAAA;;;ACAA;AACA;AACA;AACA;AACA;;;AAGA;;;AAGC,WAAU,CAAV,EAAa;AAAG;;AAEb,MAAE,QAAF,EAAY,KAAZ,CAAkB,YAAY;;AAE1B;;;;;;AAMA,gBAAQ,GAAR,CAAY,KAAZ,EAAmB,IAAnB;AACA,iBAAS,aAAT,CAAuB,mBAAvB,EAA4C,OAA5C,GAAsD,UAAC,CAAD,EAAO;AACzD,uBAAW,IAAX;AACH,SAFD;AAGA,iBAAS,aAAT,CAAuB,oBAAvB,EAA6C,OAA7C,GAAuD,UAAC,CAAD,EAAO;AAC1D,uBAAW,KAAX;AACH,SAFD;;AAKA,YAAI,aAAa,MAAM,QAAN,CAAe;AAC5B,uBAAW,SADiB;AAE5B,sBAAU;AAFkB,SAAf,CAAjB;;AAKA,UAAE,aAAF,EAAiB,IAAjB,CAAsB,UAAU,CAAV,EAAa,GAAb,EAAkB;AACpC;AACA;AACA;AACA,gBAAI,4BAA0B,KAAK,OAAL,CAAa,IAAvC,OAAJ;;AAEA,gBAAI,YAAJ;AACA,oBAAQ,KAAK,OAAL,CAAa,IAArB;AACI,qBAAK,MAAL;AACI,+BAAW,GAAX,CAAe;AACX,iCAAS,QADE;AAEX,iCAAS,CAFE;AAGX,+BAAO,GAHI;AAIX,mCAAW;AAJA,qBAAf;AAMA;AACJ,qBAAK,aAAL;AACI,+BAAW,GAAX,CAAe;AACX,iCAAS,QADE;AAEX,iCAAS,CAFE;AAGX,oCAAY,GAHD;AAIX,mCAAW;AAJA,qBAAf;AAMA;AACJ,qBAAK,YAAL;AACI,+BAAW,GAAX,CAAe;AACX,iCAAS,QADE;AAEX,iCAAS,CAFE;AAGX,oCAAY,CAAC,GAHF;AAIX,mCAAW;AAJA,qBAAf;AAMA;;AAxBR;;AA4BA;;;AAGA,oBAAQ,GAAR,CAAY,aAAZ,EAA2B,UAA3B;;AAEA;;;;;;;;;;;;;AAcH,SAtDD;;AAyDA;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;AAQA;;;;;;;;;;;AAaA;;;;;AAOA;;;;;;;;;;;;;;AAeA;AACA,UAAE,aAAF,EAAiB,IAAjB,CAAsB,OAAtB,EAA+B,UAAU,CAAV,EAAa;AACxC;;AAEA;;;;AAMA;;;;;;;;AAQH,SAjBD;;AAoBA;AACA;;;;;;AAOA;AACA;;;AAGA;;;;;;;;;;;;;;AAsBH,KAnMD;AAqMH,CAvMA,EAuMC,CAvMD,CAAD","file":"bundle.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","//import {$} from \"../node_modules/jquery/dist/jquery\";\n//import _ from 'lodash';\n//import '../css/style.scss';\n//import Icon from './img1.png';\n//import { Shapes } from './app'\n\n\n/*let shape = new Shapes();\nconsole.log('shape ', shape)*/\n\n(function ($) {  // start IIFE\n\n    $(document).ready(function () {\n\n        /*var reverse = anime({\n            targets: '[data-animation-step=\"1\"]',\n            translateX: 250,\n            direction: 'reverse'\n        });*/\n\n        console.log('ddd', this);\n        document.querySelector('.navigation .play').onclick = (e) => {\n            myTimeline.play()\n        };\n        document.querySelector('.navigation .pause').onclick = (e) => {\n            myTimeline.pause()\n        };\n\n\n        var myTimeline = anime.timeline({\n            direction: 'reverse',\n            autoplay: false\n        });\n\n        $('[data-step]').each(function (i, $el) {\n            //console.log(this.dataset.step);\n            //console.log(this);\n            //console.log(this.dataset);\n            let elTarget = `[data-step=\"${this.dataset.step}\"]`;\n\n            let obj;\n            switch (this.dataset.type) {\n                case 'fade':\n                    myTimeline.add({\n                        targets: elTarget,\n                        opacity: 0,\n                        scale: 0.5,\n                        direction: 'reverse'\n                    });\n                    break;\n                case 'right-slide':\n                    myTimeline.add({\n                        targets: elTarget,\n                        opacity: 0,\n                        translateX: 250,\n                        direction: 'reverse'\n                    });\n                    break;\n                case 'left-slide':\n                    myTimeline.add({\n                        targets: elTarget,\n                        opacity: 0,\n                        translateX: -250,\n                        direction: 'reverse'\n                    });\n                    break;\n\n            }\n\n            //if (obj) myTimeline.add(obj);\n\n\n            console.log('myTimeline ', myTimeline);\n\n            /*myTimeline\n                .add({\n                    targets: elTarget,\n                    //translateX: 250,\n                    opacity: 0,\n                    scale: 0.5,\n                   /!* rotate: {\n                        value: 25,\n                        duration: 500,\n                        easing: 'easeInOutSine'\n                    },*!/\n                    direction: 'reverse'\n                })*/\n\n        })\n\n\n        /*myTimeline\n            .add({\n                targets: '[data-step=\"1\"]',\n                translateX: 250,\n                direction: 'reverse'\n            })\n            .add({\n                targets: '[data-step=\"2\"]',\n                translateX: 250,\n                direction: 'reverse'\n            })\n            .add({\n                targets: '[data-step=\"3\"]',\n                translateX: 250,\n                direction: 'reverse'\n            });*/\n\n\n        /*myTimeline.completed = false;\n        myTimeline.complete = () => {\n            // your call back funtion\n            console.log(\"reverse done üòè\");\n        };\n        myTimeline.reverse();\n        myTimeline.play();*/\n\n        /*var playPause = anime({\n            targets: '#playPause .el',\n            translateX: 250,\n            delay: function(el, i, l) { return i * 100; },\n            direction: 'alternate',\n            loop: true,\n            autoplay: false\n        });\n\n        document.querySelector('.navigation .play').onclick = playPause.play;\n        document.querySelector('.navigation .pause').onclick = playPause.pause;*/\n\n\n        /*var queue = [];\n\n        $('[data-animation-step]').each(function (i, $el) {\n            queue.push($(this).fadeOut(5000));\n        })*/\n\n\n        /* var bouncingBall = anime({\n             targets: '.ball',\n             translateY: '50vh',\n             duration: 300,\n             loop: true,\n             direction: 'alternate',\n             easing: 'easeInCubic',\n             scaleX: {\n                 value: 1.05,\n                 duration: 150,\n                 delay: 268\n             }\n         });*/\n\n\n        // Start Queue\n        $('#startQueue').bind('click', function (e) {\n            // Go through Each Element and Fade Out //\n\n            /*$('[data-animation-step]').each(function (i, $el) {\n                queue.push($(this).fadeOut(5000));\n\n            })*/\n\n\n            /*$('.queueItem').each(function (i, $el) {\n                // Don't Delay First Element//\n                if (i == 0) {\n                    queue.push($(this).fadeOut(5000));\n                } else {\n                    queue.push($(this).delay(5000 * i).fadeOut(5000));\n                }\n            });*/\n        });\n\n\n        // Create the array of Velocity calls\n        /*var loadingSequence = [\n            { e: $element1, p: { translateX: 100, opacity: 1 }, o: { duration: 1000 } },\n            { e: $element2, p: { translateX: 200, opacity: 1 }, o: { duration: 1000 } },\n            { e: $element3, p: { translateX: 300, opacity: 1 }, o: { duration: 1000 } }\n        ];*/\n\n\n        // Pass the array into $.Velocity.RunSequence to kick off the sequence\n        //$.Velocity.RunSequence(loadingSequence);\n\n\n        /*function component() {\n            var element = document.createElement('div');\n\n            console.log('element ', element)\n\n            // Lodash, currently included via a script, is required for this line to work\n            element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n            element.classList.add('hello');\n\n            console.log('element ', element)\n            // Add the image to our existing div.\n            var myIcon = new Image();\n            myIcon.src = './img1.png';\n\n            element.appendChild(myIcon);\n\n            return element;\n        }\n\n        document.body.appendChild(component());*/\n\n\n    });\n\n}($));\n\n\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}